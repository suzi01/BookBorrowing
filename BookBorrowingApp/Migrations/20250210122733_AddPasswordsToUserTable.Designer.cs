// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Data;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(BookListingDbContext))]
    [Migration("20250210122733_AddPasswordsToUserTable")]
    partial class AddPasswordsToUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookBorrowingApp.Data.ApiUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApiUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "JennyCrews@hotmail.com",
                            FirstName = "Jenny",
                            LastName = "Crews",
                            Password = "JennyPassword"
                        },
                        new
                        {
                            Id = 2,
                            Email = "watermelonSugar@hotmail.com",
                            FirstName = "Harry",
                            LastName = "Styles",
                            Password = "WatermelonPassword"
                        },
                        new
                        {
                            Id = 3,
                            Email = "tshimaGhost@hotmail.com",
                            FirstName = "Jin",
                            LastName = "Sakai",
                            Password = "JinPassword"
                        });
                });

            modelBuilder.Entity("BookBorrowingApp.Data.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int?>("ApiUserId")
                        .HasColumnType("int");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("ApiUserId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            ApiUserId = 1,
                            Author = "Brandon Sanderson",
                            Publisher = "Tor Books",
                            Title = "The Final Empire"
                        },
                        new
                        {
                            BookId = 2,
                            ApiUserId = 1,
                            Author = "Brandon Sanderson",
                            Publisher = "Tor Books",
                            Title = "The Well Of Ascension"
                        },
                        new
                        {
                            BookId = 3,
                            Author = "Richard Swan",
                            Publisher = "Tor Books",
                            Title = "Justice of Kings"
                        },
                        new
                        {
                            BookId = 4,
                            Author = "Christopher Rucchio",
                            Publisher = "Tor Books",
                            Title = "Empire of Silence"
                        },
                        new
                        {
                            BookId = 5,
                            Author = "Robert Jackson Bennet",
                            Publisher = "Tor Books",
                            Title = "Tainted Cup"
                        },
                        new
                        {
                            BookId = 11,
                            ApiUserId = 2,
                            Author = "J.k.Rowling",
                            Publisher = "Bloomsbury",
                            Title = "Harry Potter and The Philosopher's stone "
                        },
                        new
                        {
                            BookId = 12,
                            ApiUserId = 2,
                            Author = "J.k.Rowling",
                            Publisher = "Bloomsbury",
                            Title = "Harry Potter and The Chambers of Secrets "
                        },
                        new
                        {
                            BookId = 13,
                            ApiUserId = 2,
                            Author = "J.k.Rowling",
                            Publisher = "Bloomsbury",
                            Title = "Harry Potter and The Prisoner of Azkaban "
                        },
                        new
                        {
                            BookId = 14,
                            ApiUserId = 3,
                            Author = "J.k.Rowling",
                            Publisher = "Bloomsbury",
                            Title = "Harry Potter and The Goblet of Fire "
                        });
                });

            modelBuilder.Entity("BookBorrowingApp.Data.Book", b =>
                {
                    b.HasOne("BookBorrowingApp.Data.ApiUser", "ApiUser")
                        .WithMany("Books")
                        .HasForeignKey("ApiUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ApiUser");
                });

            modelBuilder.Entity("BookBorrowingApp.Data.ApiUser", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
